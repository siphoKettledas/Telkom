<?xml version='1.0' encoding='UTF-8'?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	version="1.0">
	<xs:simpleType name="RequiredStringType">
		<xs:restriction base="xs:string">
			<xs:minLength value="1" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MetadataType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Param">
				<xs:complexType>
					<xs:attribute name="Key" type="RequiredStringType"
						use="required" />
					<xs:attribute name="Qualifier" type="RequiredStringType"
						use="required">
						<xs:annotation>
							<xs:documentation>Classification of the metadata
							</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="Value" type="RequiredStringType"
						use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SenderIDStringType">
		<xs:restriction base="RequiredStringType">
			<xs:maxLength value="64" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SenderIDType">
		<xs:simpleContent>
			<xs:extension base="SenderIDStringType">
				<xs:attribute name="EndUserIdentity" type="xs:string">
					<xs:annotation>
						<xs:documentation>Represents the unique identity of the user that
							initiated the transaction on the SenderAppID
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:anyAttribute namespace="##other"
					processContents="lax" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="BusinessKey" type="RequiredStringType" />
	<xs:element name="Metadata" type="MetadataType" />
	<xs:element name="MessageID">
		<xs:annotation>
			<xs:documentation>This is the unique messageID that is set by the
				client for a specific message interaction. For a given client
				(SystemID), the messageID must be unique. It MUST be unique for
				every message that is sent by a client. WILL be used internally for
				tracking a given transaction, end to end.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string" />
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ResultType">
		<xs:sequence>
			<xs:element name="ResultCode" type="xs:long">
				<xs:annotation>
					<xs:documentation>
						Every result message needs to have a result code
						to indicate success,
						fail or reject.
						Success means that the request
						message was successful.
						Fail means that there is some failure of
						technical nature and it is
						possible the message
						might be successful
						if resent.
						Reject means that the message will be rejected again if
						resent. This is
						typically business
						related and might require manual
						intervention.
						For fail and reject, result message code and result
						message will give
						a more detail
						description of the error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="ResultMsgCode">
				<xs:annotation>
					<xs:documentation>
						If the result code is of type fail or reject an
						additional result
						message code should be specified.
						This message
						code should indicate what type of problem was experienced
						with the
						request message.
						The recommended way of using this field is to have
						two parts: system
						identifier + number
						Example: RIM02001, CBS0999
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="64" />
						<xs:minLength value="1" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element minOccurs="0" name="ResultMsg" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						This is a more detail description, human readable
						and interpretable,
						of the result message code.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="RelatesTo">
		<xs:annotation>
			<xs:documentation>This is the unique messageID that is set by the
				client for a specific message interaction. For a given client
				(SystemID), the messageID must be unique. It MUST be unique for
				every message that is sent by a client. WILL be used internally for
				tracking a given transaction, end to end.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string" />
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="FromLocation">
		<xs:annotation>
			<xs:documentation>The location from which this request originated,
				this may be a hostname, a file, or any other location where the
				request would have originated from
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string" />
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="SenderID" type="SenderIDStringType" />
	<xs:complexType name="RequestHeaderType">
		<xs:sequence>
			<xs:element ref="MessageID" />
			<xs:element ref="FromLocation" />
			<xs:element minOccurs="0" name="ReplyToAddress">
				<xs:annotation>
					<xs:documentation>Specifies how this message should be processed:
						-
						If not specified, the call will be treated as SYNCHRONOUS
						BLOCKING. The receiver will functionally process the request and
						return a reply as part of the same. The client will initiate and
						block waitinf for the response to the call.
						- If a valid callback
						endpoint is specifried, the call is treated
						as
						INITIATE-WITH-CALLBACK. The receiver will explicitly inidcate
						to
						the client that it has either accepted or rejected the message.
						If
						it accepts the message, it will process the message and only
						once
						it is done will it either accept or reject the message
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:anyURI">
							<xs:attribute name="FaultToAddress" type="xs:anyURI">
								<xs:annotation>
									<xs:documentation>Applicable only to INITIATE-WITH-CALLBACK
										transactions. If specifiedit means the interaction is
										asynchronous with callback, and indicates that the client
										wishes the error to be returned to a different component.
									</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="ReferenceParameters">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" ref="BusinessKey" />
						<xs:element minOccurs="0" ref="Metadata" />
						<xs:element minOccurs="0" name="Extensions">
							<xs:complexType>
								<xs:sequence>
									<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
										processContents="lax" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="SenderID" />
			<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
				processContents="lax" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResponseHeaderType">
		<xs:sequence>
			<xs:element ref="MessageID">
				<xs:annotation>
					<xs:documentation>This is the unique messageID that is set by the
						receiver for a specific message interaction.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="ReferenceParameters">
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" ref="BusinessKey" />
						<xs:element minOccurs="0" ref="Metadata" />
						<xs:element minOccurs="0" name="Extensions">
							<xs:complexType>
								<xs:sequence>
									<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
										processContents="lax" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="RelatesTo">
				<xs:annotation>
					<xs:documentation>This is the unique messageID that is set by the
						client for a specific message interaction. For a given client
						(SystemID), the messageID must be unique. Will be echoed back from
						the RequestHeader
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
				processContents="lax" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResponseType">
		<xs:sequence>
			<xs:element name="Header" type="ResponseHeaderType" />
			<xs:element name="Result" type="ResultType" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Exception">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ExceptionType">
					<xs:sequence>
						<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any"
							processContents="lax" />
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ExceptionType">
		<xs:sequence>
			<xs:element name="Header" type="ResponseHeaderType" />
			<xs:element name="Result" type="ResultType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RequestType">
		<xs:sequence>
			<xs:element name="Header" type="RequestHeaderType" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>